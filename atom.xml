<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KyneSilverhide</title>
  <subtitle>Sharing some of my developper experiences to the world</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kynesilverhide.github.io/"/>
  <updated>2016-12-02T15:54:01.078Z</updated>
  <id>http://kynesilverhide.github.io/</id>
  
  <author>
    <name>KyneSilverhide</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Discovering and installing Ubuntu in VirtualBox (Part 2)</title>
    <link href="http://kynesilverhide.github.io/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/"/>
    <id>http://kynesilverhide.github.io/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/</id>
    <published>2016-11-30T18:41:26.000Z</published>
    <updated>2016-12-02T15:54:01.078Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome back to the second part of this tutorial. We’ll continue right were we left. In this second part, we’ll install Ubuntu and do some last tweaks to our installation.<br>At the end of this post, you should have a working virtual operating system.</p>
<p><em>Note : I’ll do a third (and final) part to help your learn and configure Ubuntu.</em></p>
<p>Let’s get going !<br>
  <a id="more"></a>
</p>
<h1 id="Installation">
  <a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1>
<p>Installing Ubuntu is very easy. It’s probably the easiest installation of all Unix systems. Everything is done using a graphical interface, were you just have to answer some questions and hit “continue” (yes, that’s very Windows-like).</p>
<p>To start with, select your image in Virtual box, and click start (or double-click on the image). This will ask for the start-up disk. Just click on the yellow folder (with a green arrow), and browse to the downloaded <code>.iso</code> file. Then, click
  <em>Start</em>.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install01.PNG" alt="Installation Step 1" title="Installation Step 1"></p>
<p>The install software will start loading by itself…<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install02.PNG" alt="Installation Step 2" title="Installation Step 2"></p>
<p>… until you see what looks like a basic desktop. Don’t worry too much if the resolution is small, you should be able to resize the window. You are presented with two options.</p>
<ul>
  <li><strong>Try Ubuntu</strong> : This will run a live version of Ubuntu, but any changes you do will be lost on reboot. It can be used to test Ubuntu on your computer without installing anything (<em>Note : it can also be used to restore or recover files from an OS that won’t boot.. as long as your computer is running properly</em>)</li>
  <li><strong>Install Ubuntu</strong> This is the option we will use<img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install03.PNG" alt="Installation Step 3" title="Installation Step 3">
  </li>
</ul>
<p>Check both options to allow Ubuntu to install updates and some third-party softwares to handle proprietary formats (such as MP3 files, etc), then click on <em>Continue</em>.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install04.PNG" alt="Installation Step 4" title="Installation Step 4"></p>
<p>Choose the first option to use the whole disk (<em>remember, it’s a virtual file on your disk, so you can’t destroy your files outside the virtual machine</em>), and click <em>Install Now</em>.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install05.PNG" alt="Installation Step 5" title="Installation Step 5"></p>
<p>A popup will show you that two partitions will be created. One big partition using the <a href="https://en.wikipedia.org/wiki/Ext4" target="_blank" rel="external">ext4</a> filesystem, and one smaller <em>Swap</em> partition (<em>it may be useless now that all computers have plenty of RAM, but older computers could still need this when the amount of physical RAM is full</em>).<br>Click
  on <em>Continue</em>.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install06.PNG" alt="Installation Step 6" title="Installation Step 6"></p>
<p>Next steps is easy, just select your timezone, and click on <em>Continue</em>.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install07.PNG" alt="Installation Step 7" title="Installation Step 7"></p>
<p>Choose your keyboard layout, and hit <em>Continue</em>.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install08.PNG" alt="Installation Step 8" title="Installation Step 8"></p>
<p>Now, you’ll have to choose a login and password. Ubuntu supports multiple accounts like most operating systems. Once it’s done, click <em>Continue</em>.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install09.PNG" alt="Installation Step 9" title="Installation Step 9"></p>
<p>This time, the real installation will start, and the files will be copied onto the virtual disk. You can read what’s on screen to learn a bit more about Ubuntu, or just grab a cup of coffee until the process is finished.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install10.PNG" alt="Installation Step 10" title="Installation Step 10"></p>
<p>Once the installation is complete, you’ll have to restart the virtual machine (not your computer).<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install11.PNG" alt="Installation Step 11" title="Installation Step 11"></p>
<p>Ubuntu will ask you to hit <em>ENTER</em> and then remove the installation disk. Fortunately, VirtualBox will do that for you, and turn off the fake CD drive that was reading the ISO file.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install12.PNG" alt="Installation Step 12" title="Installation Step 12"></p>
<p>Once restarted, you should see the Ubuntu login screen. If you properly setup the keyboard, you should have no problem to selected your account and type your password. Note hat the “Guest Session” is similar to the “Try Ubuntu” option we saw before. Everything
  will be cleared out at the end of the session.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install13.PNG" alt="Installation Step 13" title="Installation Step 13"></p>
<p>Ok, some final tweaks before using our brand new system. First, we’ll install the <em>Guest Additions</em> by going into the VirtualBox menu, and clicking on “Insert Guest Additions CD image…”. This will allow some features between your computer and the
  virtual machine, such as a shared clipboard, etc.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install14.PNG" alt="Installation Step 14" title="Installation Step 14"></p>
<p>This will once again emulates a CD drive that will be automatically discovered by Ubuntu. Just click on <em>Run</em> when this popup shows.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install15.PNG" alt="Installation Step 15" title="Installation Step 15"></p>
<p>A terminal will start and display some logs. Just wait for the “Press Return to close this window” to show. Hit <em>Enter</em> and the terminal will close.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install16.PNG" alt="Installation Step 16" title="Installation Step 16"></p>
<p>Now, go to the VirtualBox menu, click <em>Devices</em> and enable the bidirectional clipboard. Then, restart Ubuntu by going to the top right icon <em>(the “power icon that looks like a gear”)</em> and shutdown the system.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-Virtual-Box-P2/ubuntu-install17.PNG" alt="Installation Step 17" title="Installation Step 17"></p>
<p>Now, reboot your operating system. And <em>Voila</em>, you have a fully operational operating system that can be used to work on your home development projects.</p>
<h1 id="Conclusion">
  <a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1>
<p>Using Ubuntu is not hard, but you will probably struggle a bit at the beginning. That’s why I will write a full third part to this guide to help you discover your new desktop.</p>
<p>But here are some hints to help you wait the next post :</p>
<ul>
  <li>If you press the “Windows” key (I think it’s the “Command” key on Mac…), a global search will be triggered. Yo can search for applications, files or configurations menu. You can also just click on the top left icon in the <em>Unity</em> menu. (the left
    bar with all the big icons)</li>
  <li><strong>Firefox</strong> : Firefox is installed by default, and is a very functional web browser. On Ubuntu, it seems to work a bit better than <a href="https://www.chromium.org/" target="_blank" rel="external">Chromium</a> <em>(it’s the open-source web browser project from which Google Chrome draws its source code)</em>.
    So you can start browsing the Internet as usual</li>
  <li><strong>Terminal</strong> : This is where you can type your commands. It’s actually very powerful, and can make you save a lot of time. We’ll use it later on to install more stuff.</li>
  <li><strong>Files</strong> : The file explorer should also be available on the left, but you won’t have access to your Windows files for now. This will be covered in the next post.</li>
  <li><strong>System configuration</strong> : This is similar to Windows “Control Panel”. Most of the configuration can be done there, from changing the wallpaper to switching to another keyboard layout.</li>
  <li><strong>Ubuntu-software</strong> : This application can help you install new software, simply by searching for them by names. This is one major changes from Windows : in most Unix systems (if not all…), applications are hosted on <em>repositories</em>,
    and you can install them without having to look them up on the Internet. Some repositories have to be added manually <em>(or enabled)</em>, and some applications are still distributed as <code>.deb</code> files (Debian packages), but they can be installed
    simply by double-clicking on them.</li>
</ul>
<p>Finally, you can switch to fullscreen mode in VirtualBox by hitting <code>HOST-KEY + F</code>. “HOST-KEY” is “Right CTRL” on Windows. Simply press the same keys to go back to windowed mode.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome back to the second part of this tutorial. We’ll continue right were we left. In this second part, we’ll install Ubuntu and do some last tweaks to our installation.&lt;br&gt;At the end of this post, you should have a working virtual operating system.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note : I’ll do a third (and final) part to help your learn and configure Ubuntu.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Let’s get going !&lt;br&gt;
    
    </summary>
    
      <category term="Operating System" scheme="http://kynesilverhide.github.io/categories/Operating-System/"/>
    
    
      <category term="ubuntu" scheme="http://kynesilverhide.github.io/tags/ubuntu/"/>
    
      <category term="virtualbox" scheme="http://kynesilverhide.github.io/tags/virtualbox/"/>
    
      <category term="unity" scheme="http://kynesilverhide.github.io/tags/unity/"/>
    
      <category term="unix" scheme="http://kynesilverhide.github.io/tags/unix/"/>
    
  </entry>
  
  <entry>
    <title>Discovering and installing Ubuntu in VirtualBox (Part 1)</title>
    <link href="http://kynesilverhide.github.io/2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/"/>
    <id>http://kynesilverhide.github.io/2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/</id>
    <published>2016-11-30T18:41:26.000Z</published>
    <updated>2016-12-02T12:40:21.335Z</updated>
    
    <content type="html"><![CDATA[<p>If you are working as a developer, if you have some technical background, or simply if you label yourself as a bit geeky, you are probably aware that Windows is not the only operating system in the world (this is especially true if you are reading this
  blog on a Mac). Even your smartphone is probably running on Android instead of Windows (Phone).</p>
<p>Arguing about the best of them is pointless. Each one of them has pros and cons, from their price to their “user-friendliness”.</p>
<p> My goal in this post will be to show you Ubuntu, a free and open-source operating system based on Linux, and convince you that it is a very solid alternative to Windows <em>as a development environment</em>, that it’s easy to setup, easy to use, and completely
  free. And to achieve that, I will show you how to install it without running a single command in terminal, and without any risk of losing your data.</p>
<p> <em>Note that this tutorial will be split into multiple posts. This one is the first part.</em></p>
<a id="more"></a>
<h1 id="What-is-Ubuntu">
  <a href="#What-is-Ubuntu" class="headerlink" title="What is Ubuntu"></a>What is Ubuntu</h1>
<p>Ok, so first, you probably want to learn more about Ubuntu. Why did I choose this operating system (OS)? What does it do?<br>I’ll start by quoting <a href="https://en.wikipedia.org/wiki/Ubuntu_(operating_system" target="_blank" rel="external">Wikipedia</a>) :</p>
<blockquote>
  <p>Ubuntu is a Debian-based Linux operating system for personal computers, tablets and smartphones where Ubuntu Touch edition is used; and also runs network servers, usually with the Ubuntu Server edition, either on physical or virtual servers (such as
    on mainframes) and/or with containers, that is with enterprise-class features; runs on the most popular architectures, including server-class ARM-based.</p>
</blockquote>
<p>Yes.. that seems very technical, and not useful at all. So let’s split this information.</p>
<ul>
  <li><a href="https://en.wikipedia.org/wiki/Linux" target="_blank" rel="external">Linux</a> is a UNIX-like operating system : it shares a common base with MacOS and other operating systems, but this one is based on a free and open-source model. Also, this is actually a very basic OS on
    top of which other elements are built.</li>
  <li><a href="https://en.wikipedia.org/wiki/Debian" target="_blank" rel="external">Debian</a> is what we will call a Linux distribution. Simply put, it’s a set of programs packaged together to build a fully functional OS. We could install Debian as it is, but we want something a little
    bit more user friendly and “cool”</li>
  <li><a href="https://www.ubuntu.com/" target="_blank" rel="external">Ubuntu</a> is based on Debian. You could see it as some kind of an “experimental” version of Debian, with more updates and recent features. But fear not, it’s actually quite stable</li>
</ul>
<h2 id="But-what-does-it-looks-like">
  <a href="#But-what-does-it-looks-like" class="headerlink" title="But what does it looks like?"></a>But what does it looks like?</h2><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/ubuntu-desktop.png" alt="Ubuntu desktop with Firefox, Rythmbox, a terminal and the file explorer" title="Ubuntu desktop with Firefox, Rythmbox, a terminal and the file explorer">
<p>As you can see, this is not an obscure <em>ASCII</em> terminal in black and white, and it’s not the Matrix either.</p>
<h2 id="And-why-would-I-need-it">
  <a href="#And-why-would-I-need-it" class="headerlink" title="And why would I need it?"></a>And why would I need it?</h2>
<p>As I said in the introduction, the goal is to install a very powerful development environment. Because let’s face it, while Windows will get the job done, it’s not the most efficient (it could actually be the worst of all) when it comes to pure development
  (especially coding). If you have read my first post on <a href="/2016/11/26/Hello-World/">how to install <em>Hexo</em></a>, you probably saw that installing something on Mac and Linux (I will say “Linux” when I’m referring to Unix-based operating system
  that are not MacOS) is most of the time done by running the proper command, while windows requires a dedicated installer that won’t integrate everything as smoothly.</p>
<p>I will always try to add alternatives for Windows users on my next posts, but you should really give Ubuntu a try if you want to invest some time in custom projects at home.</p>
<h2 id="Installation">
  <a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2>
<p>When installing Ubuntu, you basically have three options</p>
<ul>
  <li>Installing it on top of windows, losing all your files and programs (if you own an old laptop that you were planning to trash for example, it could be the easiest solution)</li>
  <li>Installing it next to windows, by splitting your hard drive into two partitions (or more)</li>
  <li>Installing it in a virtual environment</li>
</ul>
<p>In this post, we’ll cover the third option and install <a href="https://www.virtualbox.org/" target="_blank" rel="external">VirtualBox</a> to host our virtual OS.<br>Just go to <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">https://www.virtualbox.org/wiki/Downloads</a> and choose
  the “Windows hosts” or “OSX (Mac) hosts” (if you are already on another Linux distribution, it’s also possible, but I think you already know all the details).</p>
<p>Install VirtualBox as any other software and start it.</p>
<h3 id="Creating-the-machine">
  <a href="#Creating-the-machine" class="headerlink" title="Creating the machine"></a>Creating the machine</h3>
<p>The first step is to create a new virtual machine. Just click the “New” button in the top left corner.<br>This will start an assistant to help you setup your virtual machine. Let’s do this together</p>
<p>First, you’ll have to choose a name for your machine. Pick anything you want, but don’t forget to select the proper type and version (Linux and Ubuntu 64)<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/vbox_install01.PNG" alt="Installation Step 1" title="Installation Step 1"></p>
<p>Keep the default values for the memory, we’ll adjust it later. Click next, and choose to create a new virtual hard disk now. This will create a big file on your disk that contains the whole system.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/vbox_install02.PNG" alt="Installation Step 2" title="Installation Step 2"></p>
<p>For every other steps, keep the default values. If you wish, you can use a “fixed sized” disk to create one single big file <em>(I choose this option, but it may be harder to resize the disk later on)</em>. We’ll continue tweaking the machine once it’s
  created. For the disk size, I recommend using at least <strong>10 Gb</strong> (But if you can afford the space, use 16 or even 20Gb).</p>
<h3 id="Tweaking-the-machine">
  <a href="#Tweaking-the-machine" class="headerlink" title="Tweaking the machine"></a>Tweaking the machine</h3>
<p>Once the machine is created, select it, and click on “Settings”.</p>
<p>Go to <em>System</em>. For the RAM, I decided to use half my RAM (4Gb/8Gb). You shouldn’t need more than 4Gb anyway.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/vbox_config01.PNG" alt="Configuration Step 1" title="Configuration Step 1"></p>
<p>Go to the next tab, and try to use as many CPUs as available (don’t go into the red part of the slider)<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/vbox_config02.PNG" alt="Configuration Step 2" title="Configuration Step 2"></p>
<p>Next tab. Use the same settings as the one from this screenshot.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/vbox_config03.PNG" alt="Configuration Step 3" title="Configuration Step 3"></p>
<p>You can now open the <em>Display</em> section. Move the slider to the right until you reach 128mb.. or lower if your graphic card is old.<br>Right now, I’ve disabled 3D acceleration because it causes some problem in a virtual environment (you can’t take
  screenshots for example).<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/vbox_config04.PNG" alt="Configuration Step 4" title="Configuration Step 4"><br>I also manually changed some configuration file to use 256Mb. Without 3D
  acceleration, I don’t think it will matter much, but if you want, simply edit the <code>.vbox</code> file (right click on your virtual machine and select “Show in Explorer”) with any text editor, and change the following row :<br>
  <figure class="highlight xml">
    <table>
      <tr>
        <td class="gutter"><pre><div class="line">1</div></pre></td>
        <td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Display</span> <span class="attr">VRAMSize</span>=<span class="string">"256"</span> <span class="attr">monitorCount</span>=<span class="string">"1"</span> <span class="attr">accelerate3D</span>=<span class="string">"false"</span> <span class="attr">accelerate2DVideo</span>=<span class="string">"false"</span>/&gt;</span></div></pre></td>
      </tr>
    </table>
  </figure>
</p>
<p>Lastly, I only managed to have proper audio by using <em>Intel HD Audio</em>. You can try other settings if you want.<br><img src="/2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/vbox_config05.PNG" alt="Configuration Step 5" title="Configuration Step 5"></p>
<h2 id="What’s-next">
  <a href="#What’s-next" class="headerlink" title="What’s next ?"></a>What’s next ?</h2>
<p>I’m sorry, but we have reached the end of this first part. Don’t worry, next part will follow quickly.<br>You now have a properly setup virtual machine, but it’s still empty. In the next post, we’ll install Ubuntu together, and I will keep my promise
  : we won’t use any terminal.</p>
<p>To prepare for this next post, you can start downloading Ubuntu 64 here : <a href="https://www.ubuntu.com/download/desktop" target="_blank" rel="external">https://www.ubuntu.com/download/desktop</a><br>Click on <em>Download</em>, and then, decide if you want to pay or not by adjusting
  the sliders. Don’t feel ashamed to use it for free.<br>You won’t need any additional software to use the download <code>.iso</code> file, VirtualBox will take care of it.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you are working as a developer, if you have some technical background, or simply if you label yourself as a bit geeky, you are probably aware that Windows is not the only operating system in the world (this is especially true if you are reading this
  blog on a Mac). Even your smartphone is probably running on Android instead of Windows (Phone).&lt;/p&gt;
&lt;p&gt;Arguing about the best of them is pointless. Each one of them has pros and cons, from their price to their “user-friendliness”.&lt;/p&gt;
&lt;p&gt; My goal in this post will be to show you Ubuntu, a free and open-source operating system based on Linux, and convince you that it is a very solid alternative to Windows &lt;em&gt;as a development environment&lt;/em&gt;, that it’s easy to setup, easy to use, and completely
  free. And to achieve that, I will show you how to install it without running a single command in terminal, and without any risk of losing your data.&lt;/p&gt;
&lt;p&gt; &lt;em&gt;Note that this tutorial will be split into multiple posts. This one is the first part.&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Operating System" scheme="http://kynesilverhide.github.io/categories/Operating-System/"/>
    
    
      <category term="ubuntu" scheme="http://kynesilverhide.github.io/tags/ubuntu/"/>
    
      <category term="virtualbox" scheme="http://kynesilverhide.github.io/tags/virtualbox/"/>
    
      <category term="unity" scheme="http://kynesilverhide.github.io/tags/unity/"/>
    
      <category term="unix" scheme="http://kynesilverhide.github.io/tags/unix/"/>
    
  </entry>
  
  <entry>
    <title>Hello World, and building your own blog</title>
    <link href="http://kynesilverhide.github.io/2016/11/26/Hello-World/"/>
    <id>http://kynesilverhide.github.io/2016/11/26/Hello-World/</id>
    <published>2016-11-26T13:27:16.000Z</published>
    <updated>2016-11-29T20:08:53.788Z</updated>
    
    <content type="html"><![CDATA[<p>Hi ! I’m Aurélien, but you’ll find me around on the web as Kyne, or KyneSilverhide. I’m a developer from Belgium (yes, we have beer and chocolate).</p>
<p>I’ve recently learned about <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>, a very powerful tool to build “static blogs”, using <a href="https://daringfireball.net/projects/markdown/" target="_blank" rel="external">Markdown</a> and some command lines. As most developers should know, the best
  way to test or learn something is by using it in a real project. That’s why I’ve decided to start this blog mostly about programming stuff, and technologies.</p>
<p>In this very first post, I’ll show you how to install Hexo for you own blog, and host it on <a href="https://github.com/" target="_blank" rel="external">Github</a> (for free, of course).<br>Also, English is not my main language, so I hope everything will be as smooth as possible.</p>
<a id="more"></a>
<h1 id="Github">
  <a href="#Github" class="headerlink" title="Github"></a>Github</h1>
<h2 id="Create-your-account">
  <a href="#Create-your-account" class="headerlink" title="Create your account"></a>Create your account</h2>
<p>Any developer should already know about Github. Basically, it will host your source code for free, and keep an history of changes using a version control system called <a href="https://git-scm.com/" target="_blank" rel="external">Git</a> (we may talk about this later…). Fortunately,
  you don’t need to know GIT in this case, because Hexo has already automated everything for you, so you can focus on writing content.<br>So, head over to <a href="https://github.com/" target="_blank" rel="external">https://github.com/</a>, create an account, and we’ll meet again in
  the next section.</p>
<h2 id="Creating-your-first-repository">
  <a href="#Creating-your-first-repository" class="headerlink" title="Creating your first repository"></a>Creating your first repository</h2>
<p>Once your account is created, we’ll create a repository to store our website. But we won’t build a basic repository. Instead, we’ll use a “new” functionality from Github called <a href="https://pages.github.com/" target="_blank" rel="external">Githut Pages</a>. I won’t go into the
  details, but this will allow your blog (or website) to be accessible at “<a href="http://username.github.io" target="_blank" rel="external">http://username.github.io</a>“. As long as you only hosts static pages and assets (javascript, css, pictures…), everything is taken care of.</p>
<p>Your repository <strong>must</strong> be called “username.github.io” (where username is your github username). From my experience, it’s seems case-insensitive.<br>Once created, we’ll need to download it on your computer. And to achieve that, we need to
  install Git.</p>
<ul>
  <li>For windows users, the installation can be downloaded here : <a href="https://git-scm.com/download/win" target="_blank" rel="external">https://git-scm.com/download/win</a></li>
  <li>For UNIX users, you should easily find the installation steps here : <a href="https://git-scm.com/download/linux" target="_blank" rel="external">https://git-scm.com/download/linux</a></li>
  <li>For MAC users, head over to this page : <a href="https://git-scm.com/download/mac" target="_blank" rel="external">https://git-scm.com/download/mac</a></li>
</ul>
<p>Once Git is installed, open a terminal (or Git-Bash on windows), and go to your workspace (If you don’t have one, just pick a folder somewhere on your computer)<br>
  <figure class="highlight plain">
    <table>
      <tr>
        <td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td>
        <td class="code"><pre><div class="line">cd /path/to/my/workspace</div><div class="line">git clone https://github.com/username/username.github.io</div><div class="line">cd username.github.io</div></pre></td>
      </tr>
    </table>
  </figure>
</p>
<p><em>(don’t forget to replace “username” with your github username)</em></p>
<p>Using any text editor or IDE, create a new file called index.html inside the newly created folder, and fill it with anything your want (as long as it’s valid HTML.. of course)<br>
  <figure class="highlight html">
    <table>
      <tr>
        <td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td>
        <td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World<span class="tag">&lt;<span class="name">h1</span>&gt;</span></div><div class="line">This is my website hosted on Github pages</div></pre></td>
      </tr>
    </table>
  </figure>
</p>
<p>And then, in order to publish everything on Github, we’ll need to type some GIT commands. Don’t worry, it’s the only time.<br>
  <figure class="highlight plain">
    <table>
      <tr>
        <td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td>
        <td class="code"><pre><div class="line">git add --all</div><div class="line">git commit -m &quot;Initial commit&quot;</div><div class="line">git push -u origin master</div></pre></td>
      </tr>
    </table>
  </figure>
</p>
<p>If you have already worked with any other VCS <em>(Version Control System)</em>, these commands may look familiar. The main difference between Git and SVN or CVS is that you first have to “commit” your changes to a local repository, and then “push” everything
  to the remote server.</p>
<p>You should now be able to access your website in your favorite web browser by accessing this URL : <a href="http://username.github.io" target="_blank" rel="external">http://username.github.io</a></p>
<h1 id="Hexo">
  <a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1>
<h1 id="Installing-Node-and-NPM">
  <a href="#Installing-Node-and-NPM" class="headerlink" title="Installing Node and NPM"></a>Installing Node and NPM</h1>
<p>Ok, if you are still reading this, let’s continue with <a href="https://nodejs.org/en/" target="_blank" rel="external">Node</a> and <a href="https://www.npmjs.com/" target="_blank" rel="external">NPM</a>. NPM is nothing more than a package manager. It will help you install program, libraries, etc.. and handle dependencies.</p>
<p>Go to <a href="https://nodejs.org/en/download/" target="_blank" rel="external">https://nodejs.org/en/download/</a> and choose the proper installer for your operating system (Node comes with NPM installed). If you are using windows, you should continue using <em>Git-Bash</em> as your
  terminal (it emulates some features from Unix-based terminals). <a href="http://cmder.net/" target="_blank" rel="external">Cmder</a> is another great terminal on Windows that you may consider using for this tutorial.</p>
<h1 id="Installing-Hexo">
  <a href="#Installing-Hexo" class="headerlink" title="Installing Hexo"></a>Installing Hexo</h1>
<p>Once Node is installed, let’s finally start installing Hexo. (<em>On UNIX environments, you will need to run this command as the administrator</em>)<br>
  <figure class="highlight plain">
    <table>
      <tr>
        <td class="gutter"><pre><div class="line">1</div></pre></td>
        <td class="code"><pre><div class="line">npm install hexo-cli -g</div></pre></td>
      </tr>
    </table>
  </figure>
</p>
<p>Now, somewhere in your workspace, let’s setup a new folder that will contain your blog</p>
<figure class="highlight plain">
  <table>
    <tr>
      <td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td>
      <td class="code"><pre><div class="line">cd /path/to/my/workspace</div><div class="line">hexo init blog</div><div class="line">cd blog</div><div class="line">npm install</div></pre></td>
    </tr>
  </table>
</figure>
<h1 id="Configuring-the-blog">
  <a href="#Configuring-the-blog" class="headerlink" title="Configuring the blog"></a>Configuring the blog</h1>
<p>The first step is to change the basic configuration defined in <code>_config.yml</code> (by the way, .yml files, for <a href="http://yaml.org/" target="_blank" rel="external">YAML</a>, are just plain text files using indentation to define the structure. With XML and JSON, these are
  the main formats for configuration files)</p>
<figure class="highlight yaml">
  <table>
    <tr>
      <td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td>
      <td class="code"><pre><div class="line"><span class="attr">title:</span> My awesome blog</div><div class="line"><span class="attr">subtitle:</span> Made with Hexo</div><div class="line"><span class="attr">description:</span> Some more text</div><div class="line"><span class="attr">author:</span> KyneSilverhide</div><div class="line"><span class="attr">language:</span> en</div><div class="line"><span class="attr">timezone:</span> Europe/Brussels</div><div class="line"></div><div class="line"><span class="attr">url:</span> http://username.github.io</div><div class="line"><span class="attr">root:</span> /</div><div class="line"><span class="attr">permalink:</span> :year/:month/:day/:title/</div><div class="line"><span class="attr">permalink_defaults:</span></div></pre></td>
    </tr>
  </table>
</figure>
<p>Everything else can be left with the default values.</p>
<h1 id="Creating-a-post">
  <a href="#Creating-a-post" class="headerlink" title="Creating a post"></a>Creating a post</h1>
<p>Save the configuration file, and go back to the terminal. Let’s write our first post.<br>
  <figure class="highlight plain">
    <table>
      <tr>
        <td class="gutter"><pre><div class="line">1</div></pre></td>
        <td class="code"><pre><div class="line">hexo new post &quot;My first post&quot;</div></pre></td>
      </tr>
    </table>
  </figure>
</p>
<p>All your posts are created inside the <code>source/_posts</code> folder. Open the <code>.md</code> file (for Markdown) matching your post title, and edit it.</p>
<figure class="highlight markdown">
  <table>
    <tr>
      <td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td>
      <td class="code"><pre><div class="line">---</div><div class="line">title: My first post</div><div class="line">date: 2016-11-26 14:27:16</div><div class="line">tags: [blog]</div><div class="line"><span class="section">categories: [Blog]</span></div><div class="line">---</div><div class="line">This is my first post ! I'm so happy.</div></pre></td>
    </tr>
  </table>
</figure>
<p>Note : some themes may allow additional elements, such as a thumbnail, a banner, etc.<br>Tags and categories may not be shown depending on your theme, but it seems to be a good practice to fill them. If you want to add multiple tags or categories, just
  put a <code>,</code> between each.</p>
<p>Ok, now that we have some content, we want to preview it before deploying everything to Github. But if you remember right, Hexo is a tool used to build <em>static blogs</em>. This means we have to “build” our site first, using this simple command :<br>
  <figure class="highlight plain">
    <table>
      <tr>
        <td class="gutter"><pre><div class="line">1</div></pre></td>
        <td class="code"><pre><div class="line">hexo generate</div></pre></td>
      </tr>
    </table>
    </figure>
</p>
<p>You’ll see some files being created or updated, and then you are done. Now, let’s see a preview. Another great feature with Hexo, is that you don’t need to setup a web server such as Apache. You just have to run this command :</p>
<figure class="highlight plain">
  <table>
    <tr>
      <td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td>
      <td class="code"><pre><div class="line">hexo server</div><div class="line"></div><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td>
    </tr>
  </table>
</figure>
<p>Open the given url <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> in your browser, and you should see your first post !</p>
<p>If you want to know more about the Markdown syntax that you can use in your posts, just head over to this <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#code" target="_blank" rel="external">Markdown CheatSheet</a>.<br>This syntax can also be used in some
  Wikis and other tools.</p>
<h1 id="Publishing-it-to-Github">
  <a href="#Publishing-it-to-Github" class="headerlink" title="Publishing it to Github"></a>Publishing it to Github</h1>
<p>If everything works fine, it’s time to show your blog to the world. Let’s start by some configuration. Open <code>_config.yml</code>, and change this part</p>
<figure class="highlight yaml">
  <table>
    <tr>
      <td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td>
      <td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> git</div><div class="line"><span class="attr">  repository:</span> https://github.com/username/username.github.io.git</div><div class="line"><span class="attr">  branch:</span> master</div></pre></td>
    </tr>
  </table>
</figure>
<p>Of course, you have to change “username” with your Github account.<br>Don’t forget that you need to generate your blog content before deploying it. You have three options</p>
<p><strong>Manually generating and then deploying</strong><br>
  <figure class="highlight plain">
    <table>
      <tr>
        <td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td>
        <td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td>
      </tr>
    </table>
  </figure>
</p>
<p><strong>Using any of these two shortcuts</strong><br>
  <figure class="highlight plain">
    <table>
      <tr>
        <td class="gutter"><pre><div class="line">1</div></pre></td>
        <td class="code"><pre><div class="line">hexo generate --deploy</div></pre></td>
      </tr>
    </table>
  </figure>
</p>
<figure class="highlight plain">
  <table>
    <tr>
      <td class="gutter"><pre><div class="line">1</div></pre></td>
      <td class="code"><pre><div class="line">hexo deploy --generate</div></pre></td>
    </tr>
  </table>
</figure>
<p>During the deployment, you’ll be asked for your Github login and password. Fill them in, and the deployment process should continue.<br>This will also remove the test <code>index.html</code> that we wrote at the beginning of this tutorial. Don’t worry,
  we won’t need it anymore.</p>
<p>Your blog should now be accessible at <a href="http://username.github.io" target="_blank" rel="external">http://username.github.io</a>. Congratulations !</p>
<h1 id="Conclusion">
  <a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1>
<p>Now that we have do so many awesome things <em>(yes, auto-congratulation is very important as a developer)</em>, let’s take a step back and list what we have accomplished today.</p>
<ul>
  <li>First, we have created a <strong>Github</strong> account to host our blog. But Github is also one of the best solution to host the source code of all your projects, so feel free to check their website.</li>
  <li>Then, we use some <strong>Git</strong> commands to send our test page to Github. Git is also a very famous tool (and my favorite VCS), but it can be hard to master, so I only scratched the surface in this blog. You should find some more tutorials on
    Github, or around the web.</li>
  <li>After this, we installed <strong>Node</strong> and <strong>NPM</strong>. If you are a web developer, you should already have these installed. There are so many libraries, projects and applications built on top of node, and available through NPM. But
    be aware that NPM seems to download the whole Internet each time you use it.</li>
  <li>The next step was to Install Hexo, and write some content. If you want to continue your blog, I recommend you to browse some of the <a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo Themes</a>, learn more about <strong>Markdown</strong>, or read the <a href="https://hexo.io/docs/" target="_blank" rel="external">Hexo Documentation</a></li>
  <li>Lastly, we published our blog to Github. Feel free to test it on your tablet or mobile phone too !</li>
</ul>
<p>This concludes my first post. I hope that this tutorial have taught you something, or helped you somehow, and we’ll meet again in the next post !</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hi ! I’m Aurélien, but you’ll find me around on the web as Kyne, or KyneSilverhide. I’m a developer from Belgium (yes, we have beer and chocolate).&lt;/p&gt;
&lt;p&gt;I’ve recently learned about &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;, a very powerful tool to build “static blogs”, using &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; and some command lines. As most developers should know, the best
  way to test or learn something is by using it in a real project. That’s why I’ve decided to start this blog mostly about programming stuff, and technologies.&lt;/p&gt;
&lt;p&gt;In this very first post, I’ll show you how to install Hexo for you own blog, and host it on &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt; (for free, of course).&lt;br&gt;Also, English is not my main language, so I hope everything will be as smooth as possible.&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="http://kynesilverhide.github.io/categories/Programming/"/>
    
      <category term="Hexo" scheme="http://kynesilverhide.github.io/categories/Programming/Hexo/"/>
    
    
      <category term="blog" scheme="http://kynesilverhide.github.io/tags/blog/"/>
    
      <category term="hexo" scheme="http://kynesilverhide.github.io/tags/hexo/"/>
    
      <category term="github" scheme="http://kynesilverhide.github.io/tags/github/"/>
    
      <category term="git" scheme="http://kynesilverhide.github.io/tags/git/"/>
    
      <category term="markdown" scheme="http://kynesilverhide.github.io/tags/markdown/"/>
    
      <category term="node" scheme="http://kynesilverhide.github.io/tags/node/"/>
    
      <category term="npm" scheme="http://kynesilverhide.github.io/tags/npm/"/>
    
  </entry>
  
</feed>
