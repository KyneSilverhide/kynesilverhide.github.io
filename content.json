{"meta":{"title":"KyneSilverhide","subtitle":"Sharing some of my developper experiences to the world","description":"Description of the blog","author":"KyneSilverhide","url":"http://kynesilverhide.github.io"},"pages":[{"title":"Categories","date":"2016-12-01T18:26:30.750Z","updated":"2016-11-26T13:25:34.000Z","comments":true,"path":"categories/index.html","permalink":"http://kynesilverhide.github.io/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2016-12-01T18:26:30.750Z","updated":"2016-11-26T13:25:45.000Z","comments":true,"path":"tags/index.html","permalink":"http://kynesilverhide.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Discovering and installing Ubuntu in VirtualBox (Part 1)","slug":"Discovering-and-installing-Ubuntu-in-VirtualBox","date":"2016-11-30T18:41:26.000Z","updated":"2016-12-02T12:40:21.335Z","comments":true,"path":"2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/","link":"","permalink":"http://kynesilverhide.github.io/2016/11/30/Discovering-and-installing-Ubuntu-in-VirtualBox/","excerpt":"If you are working as a developer, if you have some technical background, or simply if you label yourself as a bit geeky, you are probably aware that Windows is not the only operating system in the world (this is especially true if you are reading this blog on a Mac). Even your smartphone is probably running on Android instead of Windows (Phone). Arguing about the best of them is pointless. Each one of them has pros and cons, from their price to their “user-friendliness”. My goal in this post will be to show you Ubuntu, a free and open-source operating system based on Linux, and convince you that it is a very solid alternative to Windows as a development environment, that it’s easy to setup, easy to use, and completely free. And to achieve that, I will show you how to install it without running a single command in terminal, and without any risk of losing your data. Note that this tutorial will be split into multiple posts. This one is the first part.","text":"If you are working as a developer, if you have some technical background, or simply if you label yourself as a bit geeky, you are probably aware that Windows is not the only operating system in the world (this is especially true if you are reading this blog on a Mac). Even your smartphone is probably running on Android instead of Windows (Phone). Arguing about the best of them is pointless. Each one of them has pros and cons, from their price to their “user-friendliness”. My goal in this post will be to show you Ubuntu, a free and open-source operating system based on Linux, and convince you that it is a very solid alternative to Windows as a development environment, that it’s easy to setup, easy to use, and completely free. And to achieve that, I will show you how to install it without running a single command in terminal, and without any risk of losing your data. Note that this tutorial will be split into multiple posts. This one is the first part. What is UbuntuOk, so first, you probably want to learn more about Ubuntu. Why did I choose this operating system (OS)? What does it do?I’ll start by quoting Wikipedia) : Ubuntu is a Debian-based Linux operating system for personal computers, tablets and smartphones where Ubuntu Touch edition is used; and also runs network servers, usually with the Ubuntu Server edition, either on physical or virtual servers (such as on mainframes) and/or with containers, that is with enterprise-class features; runs on the most popular architectures, including server-class ARM-based. Yes.. that seems very technical, and not useful at all. So let’s split this information. Linux is a UNIX-like operating system : it shares a common base with MacOS and other operating systems, but this one is based on a free and open-source model. Also, this is actually a very basic OS on top of which other elements are built. Debian is what we will call a Linux distribution. Simply put, it’s a set of programs packaged together to build a fully functional OS. We could install Debian as it is, but we want something a little bit more user friendly and “cool” Ubuntu is based on Debian. You could see it as some kind of an “experimental” version of Debian, with more updates and recent features. But fear not, it’s actually quite stable But what does it looks like? As you can see, this is not an obscure ASCII terminal in black and white, and it’s not the Matrix either. And why would I need it?As I said in the introduction, the goal is to install a very powerful development environment. Because let’s face it, while Windows will get the job done, it’s not the most efficient (it could actually be the worst of all) when it comes to pure development (especially coding). If you have read my first post on how to install Hexo, you probably saw that installing something on Mac and Linux (I will say “Linux” when I’m referring to Unix-based operating system that are not MacOS) is most of the time done by running the proper command, while windows requires a dedicated installer that won’t integrate everything as smoothly. I will always try to add alternatives for Windows users on my next posts, but you should really give Ubuntu a try if you want to invest some time in custom projects at home. InstallationWhen installing Ubuntu, you basically have three options Installing it on top of windows, losing all your files and programs (if you own an old laptop that you were planning to trash for example, it could be the easiest solution) Installing it next to windows, by splitting your hard drive into two partitions (or more) Installing it in a virtual environment In this post, we’ll cover the third option and install VirtualBox to host our virtual OS.Just go to https://www.virtualbox.org/wiki/Downloads and choose the “Windows hosts” or “OSX (Mac) hosts” (if you are already on another Linux distribution, it’s also possible, but I think you already know all the details). Install VirtualBox as any other software and start it. Creating the machineThe first step is to create a new virtual machine. Just click the “New” button in the top left corner.This will start an assistant to help you setup your virtual machine. Let’s do this together First, you’ll have to choose a name for your machine. Pick anything you want, but don’t forget to select the proper type and version (Linux and Ubuntu 64) Keep the default values for the memory, we’ll adjust it later. Click next, and choose to create a new virtual hard disk now. This will create a big file on your disk that contains the whole system. For every other steps, keep the default values. If you wish, you can use a “fixed sized” disk to create one single big file (I choose this option, but it may be harder to resize the disk later on). We’ll continue tweaking the machine once it’s created. For the disk size, I recommend using at least 10 Gb (But if you can afford the space, use 16 or even 20Gb). Tweaking the machineOnce the machine is created, select it, and click on “Settings”. Go to System. For the RAM, I decided to use half my RAM (4Gb/8Gb). You shouldn’t need more than 4Gb anyway. Go to the next tab, and try to use as many CPUs as available (don’t go into the red part of the slider) Next tab. Use the same settings as the one from this screenshot. You can now open the Display section. Move the slider to the right until you reach 128mb.. or lower if your graphic card is old.Right now, I’ve disabled 3D acceleration because it causes some problem in a virtual environment (you can’t take screenshots for example).I also manually changed some configuration file to use 256Mb. Without 3D acceleration, I don’t think it will matter much, but if you want, simply edit the .vbox file (right click on your virtual machine and select “Show in Explorer”) with any text editor, and change the following row :1&lt;Display VRAMSize=\"256\" monitorCount=\"1\" accelerate3D=\"false\" accelerate2DVideo=\"false\"/&gt; Lastly, I only managed to have proper audio by using Intel HD Audio. You can try other settings if you want. What’s next ?I’m sorry, but we have reached the end of this first part. Don’t worry, next part will follow quickly.You now have a properly setup virtual machine, but it’s still empty. In the next post, we’ll install Ubuntu together, and I will keep my promise : we won’t use any terminal. To prepare for this next post, you can start downloading Ubuntu 64 here : https://www.ubuntu.com/download/desktopClick on Download, and then, decide if you want to pay or not by adjusting the sliders. Don’t feel ashamed to use it for free.You won’t need any additional software to use the download .iso file, VirtualBox will take care of it.","categories":[{"name":"Operating System","slug":"Operating-System","permalink":"http://kynesilverhide.github.io/categories/Operating-System/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://kynesilverhide.github.io/tags/ubuntu/"},{"name":"virtualbox","slug":"virtualbox","permalink":"http://kynesilverhide.github.io/tags/virtualbox/"},{"name":"unity","slug":"unity","permalink":"http://kynesilverhide.github.io/tags/unity/"},{"name":"unix","slug":"unix","permalink":"http://kynesilverhide.github.io/tags/unix/"}]},{"title":"Hello World, and building your own blog","slug":"Hello-World","date":"2016-11-26T13:27:16.000Z","updated":"2016-11-29T20:08:53.788Z","comments":true,"path":"2016/11/26/Hello-World/","link":"","permalink":"http://kynesilverhide.github.io/2016/11/26/Hello-World/","excerpt":"Hi ! I’m Aurélien, but you’ll find me around on the web as Kyne, or KyneSilverhide. I’m a developer from Belgium (yes, we have beer and chocolate). I’ve recently learned about Hexo, a very powerful tool to build “static blogs”, using Markdown and some command lines. As most developers should know, the best way to test or learn something is by using it in a real project. That’s why I’ve decided to start this blog mostly about programming stuff, and technologies. In this very first post, I’ll show you how to install Hexo for you own blog, and host it on Github (for free, of course).Also, English is not my main language, so I hope everything will be as smooth as possible.","text":"Hi ! I’m Aurélien, but you’ll find me around on the web as Kyne, or KyneSilverhide. I’m a developer from Belgium (yes, we have beer and chocolate). I’ve recently learned about Hexo, a very powerful tool to build “static blogs”, using Markdown and some command lines. As most developers should know, the best way to test or learn something is by using it in a real project. That’s why I’ve decided to start this blog mostly about programming stuff, and technologies. In this very first post, I’ll show you how to install Hexo for you own blog, and host it on Github (for free, of course).Also, English is not my main language, so I hope everything will be as smooth as possible. GithubCreate your accountAny developer should already know about Github. Basically, it will host your source code for free, and keep an history of changes using a version control system called Git (we may talk about this later…). Fortunately, you don’t need to know GIT in this case, because Hexo has already automated everything for you, so you can focus on writing content.So, head over to https://github.com/, create an account, and we’ll meet again in the next section. Creating your first repositoryOnce your account is created, we’ll create a repository to store our website. But we won’t build a basic repository. Instead, we’ll use a “new” functionality from Github called Githut Pages. I won’t go into the details, but this will allow your blog (or website) to be accessible at “http://username.github.io“. As long as you only hosts static pages and assets (javascript, css, pictures…), everything is taken care of. Your repository must be called “username.github.io” (where username is your github username). From my experience, it’s seems case-insensitive.Once created, we’ll need to download it on your computer. And to achieve that, we need to install Git. For windows users, the installation can be downloaded here : https://git-scm.com/download/win For UNIX users, you should easily find the installation steps here : https://git-scm.com/download/linux For MAC users, head over to this page : https://git-scm.com/download/mac Once Git is installed, open a terminal (or Git-Bash on windows), and go to your workspace (If you don’t have one, just pick a folder somewhere on your computer)123cd /path/to/my/workspacegit clone https://github.com/username/username.github.iocd username.github.io (don’t forget to replace “username” with your github username) Using any text editor or IDE, create a new file called index.html inside the newly created folder, and fill it with anything your want (as long as it’s valid HTML.. of course)12&lt;h1&gt;Hello World&lt;h1&gt;This is my website hosted on Github pages And then, in order to publish everything on Github, we’ll need to type some GIT commands. Don’t worry, it’s the only time.123git add --allgit commit -m &quot;Initial commit&quot;git push -u origin master If you have already worked with any other VCS (Version Control System), these commands may look familiar. The main difference between Git and SVN or CVS is that you first have to “commit” your changes to a local repository, and then “push” everything to the remote server. You should now be able to access your website in your favorite web browser by accessing this URL : http://username.github.io HexoInstalling Node and NPMOk, if you are still reading this, let’s continue with Node and NPM. NPM is nothing more than a package manager. It will help you install program, libraries, etc.. and handle dependencies. Go to https://nodejs.org/en/download/ and choose the proper installer for your operating system (Node comes with NPM installed). If you are using windows, you should continue using Git-Bash as your terminal (it emulates some features from Unix-based terminals). Cmder is another great terminal on Windows that you may consider using for this tutorial. Installing HexoOnce Node is installed, let’s finally start installing Hexo. (On UNIX environments, you will need to run this command as the administrator)1npm install hexo-cli -g Now, somewhere in your workspace, let’s setup a new folder that will contain your blog 1234cd /path/to/my/workspacehexo init blogcd blognpm install Configuring the blogThe first step is to change the basic configuration defined in _config.yml (by the way, .yml files, for YAML, are just plain text files using indentation to define the structure. With XML and JSON, these are the main formats for configuration files) 1234567891011title: My awesome blogsubtitle: Made with Hexodescription: Some more textauthor: KyneSilverhidelanguage: entimezone: Europe/Brusselsurl: http://username.github.ioroot: /permalink: :year/:month/:day/:title/permalink_defaults: Everything else can be left with the default values. Creating a postSave the configuration file, and go back to the terminal. Let’s write our first post.1hexo new post &quot;My first post&quot; All your posts are created inside the source/_posts folder. Open the .md file (for Markdown) matching your post title, and edit it. 1234567---title: My first postdate: 2016-11-26 14:27:16tags: [blog]categories: [Blog]---This is my first post ! I'm so happy. Note : some themes may allow additional elements, such as a thumbnail, a banner, etc.Tags and categories may not be shown depending on your theme, but it seems to be a good practice to fill them. If you want to add multiple tags or categories, just put a , between each. Ok, now that we have some content, we want to preview it before deploying everything to Github. But if you remember right, Hexo is a tool used to build static blogs. This means we have to “build” our site first, using this simple command :1hexo generate You’ll see some files being created or updated, and then you are done. Now, let’s see a preview. Another great feature with Hexo, is that you don’t need to setup a web server such as Apache. You just have to run this command : 1234hexo serverINFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. Open the given url http://localhost:4000 in your browser, and you should see your first post ! If you want to know more about the Markdown syntax that you can use in your posts, just head over to this Markdown CheatSheet.This syntax can also be used in some Wikis and other tools. Publishing it to GithubIf everything works fine, it’s time to show your blog to the world. Let’s start by some configuration. Open _config.yml, and change this part 1234deploy: type: git repository: https://github.com/username/username.github.io.git branch: master Of course, you have to change “username” with your Github account.Don’t forget that you need to generate your blog content before deploying it. You have three options Manually generating and then deploying12hexo generatehexo deploy Using any of these two shortcuts1hexo generate --deploy 1hexo deploy --generate During the deployment, you’ll be asked for your Github login and password. Fill them in, and the deployment process should continue.This will also remove the test index.html that we wrote at the beginning of this tutorial. Don’t worry, we won’t need it anymore. Your blog should now be accessible at http://username.github.io. Congratulations ! ConclusionNow that we have do so many awesome things (yes, auto-congratulation is very important as a developer), let’s take a step back and list what we have accomplished today. First, we have created a Github account to host our blog. But Github is also one of the best solution to host the source code of all your projects, so feel free to check their website. Then, we use some Git commands to send our test page to Github. Git is also a very famous tool (and my favorite VCS), but it can be hard to master, so I only scratched the surface in this blog. You should find some more tutorials on Github, or around the web. After this, we installed Node and NPM. If you are a web developer, you should already have these installed. There are so many libraries, projects and applications built on top of node, and available through NPM. But be aware that NPM seems to download the whole Internet each time you use it. The next step was to Install Hexo, and write some content. If you want to continue your blog, I recommend you to browse some of the Hexo Themes, learn more about Markdown, or read the Hexo Documentation Lastly, we published our blog to Github. Feel free to test it on your tablet or mobile phone too ! This concludes my first post. I hope that this tutorial have taught you something, or helped you somehow, and we’ll meet again in the next post !","categories":[{"name":"Programming","slug":"Programming","permalink":"http://kynesilverhide.github.io/categories/Programming/"},{"name":"Hexo","slug":"Programming/Hexo","permalink":"http://kynesilverhide.github.io/categories/Programming/Hexo/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://kynesilverhide.github.io/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"http://kynesilverhide.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://kynesilverhide.github.io/tags/github/"},{"name":"git","slug":"git","permalink":"http://kynesilverhide.github.io/tags/git/"},{"name":"markdown","slug":"markdown","permalink":"http://kynesilverhide.github.io/tags/markdown/"},{"name":"node","slug":"node","permalink":"http://kynesilverhide.github.io/tags/node/"},{"name":"npm","slug":"npm","permalink":"http://kynesilverhide.github.io/tags/npm/"}]}]}